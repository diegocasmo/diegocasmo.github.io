{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021-08-29-email-and-password-based-authentication-with-expo-and-firebase-part-1-project-setup/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Diego Castillo"}},"markdownRemark":{"id":"c32e6dcf-bb6e-5d42-b65d-6a13a7a279e5","excerpt":"This is part 1/3 of a series of blog posts that showcase email and password based authentication using Expo and Firebase. Part 1: Project Setup (you are here…","html":"<ul>\n<li>This is part 1/3 of a series of blog posts that showcase email and password based authentication using Expo and Firebase.\n<ul>\n<li>Part 1: Project Setup (you are here)</li>\n<li><a href=\"https://dev.to/diegocasmo/email-and-password-based-authentication-with-expo-and-firebase-part-2-sign-up-email-verification-and-sign-out-40j5\">Part 2: Sign Up, Email Verification, and Sign Out</a></li>\n<li><a href=\"https://dev.to/diegocasmo/email-and-password-based-authentication-with-expo-and-firebase-part-3-sign-in-forgot-password-and-update-password-2agj\">Part 3: Sign In, Forgot Password, and Update Password</a></li>\n</ul>\n</li>\n</ul>\n<p>For a while now, I’ve been using Firebase as my go-to tool to quickly setup an email and password based authentication flow when working with Expo. While there are many other solutions out there, I’ve yet to find one that allows me to get started so quickly as Firebase does.</p>\n<p>The goal of this series of blog posts, is to provide a simple example of how to setup Expo and Firebase with email and password based authentication. When done, this app will support sign up, sign in, sign out, email verification, forgot password, and update password. All the code for this series of blog posts is available on <a href=\"https://github.com/diegocasmo/expo-firebase-authentication\">this GitHub repository</a>. Let’s jump right in.</p>\n<h2>Create a New Expo App</h2>\n<p>If not done already, install the Expo CLI by running <code class=\"language-text\">npm install --global expo-cli</code> so that the application can be created. Next, create a new application by running <code class=\"language-text\">expo init --npm</code> and select the blank template. The application can now be served with <code class=\"language-text\">npm start</code> and opened locally or in the device/simulator of your preference. For simplicity, I’ll be running it through <a href=\"https://docs.expo.dev/workflow/web/\">React Native for web</a>,  which works out of the box with the Expo SDK. To do so, simply press <code class=\"language-text\">w</code> in the terminal that’s running the Expo CLI.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fnu6s7crdnp05retnl7.png\" alt=\"expo-cli-options\"></p>\n<p><em>Expo CLI options to open an app.</em></p>\n<p>Assuming everything went smoothly, the newly created Expo app should now be accessible via a web browser in <code class=\"language-text\">http://localhost:19006/</code>, where it should display a familiar welcome message.</p>\n<h2>Create a Firebase Project</h2>\n<p>Navigate to your Firebase account and create a new project. Once the project is created, click in the sidebar “Authentication” menu item, and enable the “Email/Password” provider.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p36y8i99ddwb9owo95oc.png\" alt=\"firebase-email-provider-enabled\"></p>\n<p><em>“Email/Password” Firebase authentication provider enabled.</em></p>\n<p>Next, go to the project settings and register a web app for the project.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vginlcy3dyn87frct3ik.png\" alt=\"firebase-register-web-app\"></p>\n<p><em>Select the web app platform to register the web app.</em></p>\n<p>Finally, add the Firebase SDK to the web app (this configuration will later on be used to initialize the Firebase app in the Expo project).</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8a26kn36m59q8bk43shp.png\" alt=\"firebase-sdk-configuration-example\"></p>\n<p><em>Firebase SDK configuration example.</em></p>\n<h2>Configure Expo and Firebase</h2>\n<p>It’s time to use the Firebase project configuration in the Expo app. To do so, first install the Firebase SDK by running <code class=\"language-text\">expo install firebase</code>. Additionally, install <a href=\"https://github.com/goatandsheep/react-native-dotenv\">react-native-dotenv</a> by running <code class=\"language-text\">npm install react-native-dotenv</code>, so that environment variables can be imported in the app via an <code class=\"language-text\">.env</code> file. Next, add the <code class=\"language-text\">module:react-native-dotenv</code> plugin to the default Expo <code class=\"language-text\">babel.config.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">api</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  api<span class=\"token punctuation\">.</span><span class=\"token function\">cache</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'babel-preset-expo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'module:react-native-dotenv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Add this</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em><code class=\"language-text\">babel.config.js</code> configuration file.</em></p>\n<p>Create an <code class=\"language-text\">.env</code> file in the root directory of the project by running <code class=\"language-text\">touch .env</code>, and fill it in with the correct Firebase SDK configuration details. I’ve prefixed them with <code class=\"language-text\">FIREBASE_</code> so that it’s clear what these are for.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">FIREBASE_API_KEY</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">FIREBASE_AUTH_DOMAIN</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">FIREBASE_PROJECT_ID</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">FIREBASE_STORAGE_BUCKET</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">FIREBASE_MESSAGING_SENDER_ID</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">FIREBASE_APP_ID</span><span class=\"token operator\">=</span></code></pre></div>\n<p><em>Example of an <code class=\"language-text\">.env</code> file. Fill it in with the Firebase SDK web app project configuration.</em></p>\n<p>Create the app’s API directory by running <code class=\"language-text\">mkdir -p src/api</code> and an index file within it with <code class=\"language-text\">touch src/api/index.js</code>. This is where the Firebase app will be initialized. To do so, use the environment variables.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">'firebase'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">FIREBASE_API_KEY</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIREBASE_AUTH_DOMAIN</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIREBASE_PROJECT_ID</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIREBASE_STORAGE_BUCKET</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIREBASE_MESSAGING_SENDER_ID</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIREBASE_APP_ID</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@env'</span>\n\n<span class=\"token keyword\">const</span> firebaseConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  apiKey<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_API_KEY</span><span class=\"token punctuation\">,</span>\n  authDomain<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_AUTH_DOMAIN</span><span class=\"token punctuation\">,</span>\n  projectId<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_PROJECT_ID</span><span class=\"token punctuation\">,</span>\n  storageBucket<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_STORAGE_BUCKET</span><span class=\"token punctuation\">,</span>\n  messagingSenderId<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_MESSAGING_SENDER_ID</span><span class=\"token punctuation\">,</span>\n  appId<span class=\"token operator\">:</span> <span class=\"token constant\">FIREBASE_APP_ID</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nfirebase<span class=\"token punctuation\">.</span><span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>firebaseConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally, import this file in <code class=\"language-text\">App.js</code> (located in the root directory):</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./src/api'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Import the Firebase API configuration file</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StatusBar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'expo-status-bar'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> View <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Rest of the file omitted...</span></code></pre></div>\n<h2>Application Structure and Dependencies</h2>\n<p>To simplify the application, I’ll be using the following libraries (installation instructions are outlined below each of them). Note that none of these libraries are technically required, but they will simplify getting up and running.</p>\n<ul>\n<li>\n<p><a href=\"https://docs.nativebase.io/install-expo\">NativeBase</a>: mobile-first, accessible components for React Native &#x26; Web.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> native-base styled-components styled-system\nexpo <span class=\"token function\">install</span> react-native-svg\nexpo <span class=\"token function\">install</span> react-native-safe-area-context</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://formik.org/docs/overview#npm\">Formik</a>: create forms, manage, and validate their state.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> formik</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://github.com/jquense/yup#install\">Yup</a>:  schema builder for value parsing and validation (<a href=\"https://formik.org/docs/overview#complementary-packages\">which integrates nicely with Formik</a>).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> yup</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://reactnavigation.org/docs/getting-started/#installation\">React Navigation</a>: routing and navigation for Expo and React Native apps.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @react-navigation/native\nexpo <span class=\"token function\">install</span> react-native-screens react-native-safe-area-context</code></pre></div>\n</li>\n</ul>\n<p>Let’s now create the “application structure”. The application structure will use a “feature-based” approach, where each feature (i.e., sign up, email verification, etc) will be contained within a directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">src/\n  Root.js\n  api/ <span class=\"token comment\"># API-only methods (Firebase)</span>\n  components/ <span class=\"token comment\"># Re-usable components (among many features)</span>\n  features/\n    sign-up/\n      components/ <span class=\"token comment\"># Components used by the sign-up feature only</span>\n      screens/ <span class=\"token comment\"># Container type component(s) which setup layout/structure and higher level logic</span></code></pre></div>\n<p>The first step is to create the <code class=\"language-text\">Root.js</code> file. To do so, copy <code class=\"language-text\">App.js</code> by running <code class=\"language-text\">cp App.js src/Root.js</code>, then remove <code class=\"language-text\">App.js</code> (<code class=\"language-text\">rm App.js</code>), and update the <code class=\"language-text\">package.json</code> file so that <code class=\"language-text\">main</code> points to <code class=\"language-text\">src/Root.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"main\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"src/Root.js\"</span></code></pre></div>\n<p>Next, replace the contents of <code class=\"language-text\">Root.js</code> so that it imports the Firebase API, setup the <code class=\"language-text\">native-base</code> provider, and register the root Expo component.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./api'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> registerRootComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'expo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StatusBar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'expo-status-bar'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NativeBaseProvider<span class=\"token punctuation\">,</span> Box <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'native-base'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Root</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NativeBaseProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Box</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Box</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StatusBar</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\">auto</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NativeBaseProvider</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">registerRootComponent</span><span class=\"token punctuation\">(</span>Root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Start the Expo server once again by running <code class=\"language-text\">npm start</code> and make sure the “Hello world” message is correctly shown.</p>\n<h2>Re-cap</h2>\n<p>In this blog post, we’ve gone over setting up Expo and Firebase together with the goal of implementing an email and password based authentication system. Additionally, a common set of libraries were installed and setup to make it easier to implement the upcoming features the app will need. In the next blog post, we’ll implement the sign up, email verification, and sign out features.</p>","frontmatter":{"title":"Email and Password Based Authentication with Expo and Firebase Part 1 - Project Setup","date":"August 29, 2021","description":null}},"previous":{"fields":{"slug":"/2020-10-18-create-a-simple-react-timer-component/"},"frontmatter":{"title":"Create a Simple React Timer Component"}},"next":null},"pageContext":{"id":"c32e6dcf-bb6e-5d42-b65d-6a13a7a279e5","previousPostId":"c6cb5961-64c5-5215-94ae-b057947f6e13","nextPostId":null}},
    "staticQueryHashes": ["650872877"]}