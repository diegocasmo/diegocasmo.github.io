{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021-11-29-scroll-to-input-on-formik-failed-submission/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Diego Castillo"}},"markdownRemark":{"id":"d485587d-6614-58fe-8dd9-f0270231b12f","excerpt":"Create demo app (repo in GitRub) (e.g., a list of to-dos) Motivation Solution  getFieldErrorNames Conclusion Motivation Solution Conclusion","html":"<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Create demo app (repo in GitRub) (e.g., a list of to-dos)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Motivation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Solution\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <ScrollToFieldError/></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> getFieldErrorNames</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Conclusion</li>\n</ul>\n<h2>Motivation</h2>\n<h2>Solution</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useFormikContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"formik\"</span>\n<span class=\"token keyword\">import</span> isEmpty <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash/isEmpty\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token comment\">/**\n * Returns an array of error field names using object dot notation for\n * array fields (if any)\n * Example:\n * Input: { name: 'is invalid', items: [{ description: 'is invalid' }] }\n * Output: ['name', 'items.0.description']\n * @param {Object} errors A Formik form errors\n * @returns {Array}\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getFieldErrorNames</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">formikErrors</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> transformObjectToDotNotation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n      <span class=\"token keyword\">const</span> nextKey <span class=\"token operator\">=</span> prefix <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefix<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> key\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">transformObjectToDotNotation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> nextKey<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextKey<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> result\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">transformObjectToDotNotation</span><span class=\"token punctuation\">(</span>formikErrors<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * @deprecated use &lt;ErrorSummary/> instead\n * Scroll to first Formik field error on failed schema validation\n * form submission\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ScrollToFieldError</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> submitCount<span class=\"token punctuation\">,</span> isValid<span class=\"token punctuation\">,</span> errors <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useFormikContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isValid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">const</span> fieldErrorNames <span class=\"token operator\">=</span> <span class=\"token function\">getFieldErrorNames</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>fieldErrorNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">const</span> elements <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByName</span><span class=\"token punctuation\">(</span>fieldErrorNames<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n    <span class=\"token comment\">// Scroll first known error into view</span>\n    elements<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> behavior<span class=\"token operator\">:</span> <span class=\"token string\">\"smooth\"</span><span class=\"token punctuation\">,</span> block<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Unfortunately, Formik doesn't yet provide a sort of callback for a</span>\n    <span class=\"token comment\">// failed submission, thus why this is implemented through a hook that</span>\n    <span class=\"token comment\">// listens to changes on the submit count. We explicitly don't want</span>\n    <span class=\"token comment\">// to add `isValid` or `errors` as hooks dependencies, as that might</span>\n    <span class=\"token comment\">// cause the effect to run while the user is typing on an input and</span>\n    <span class=\"token comment\">// result in a non-pleasant UX.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>submitCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// eslint-disable-line react-hooks/exhaustive-deps</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>","frontmatter":{"title":"Scroll to Input on Formik Failed Submission","date":"November 29, 2021","description":null}},"previous":{"fields":{"slug":"/2021-09-19-email-and-password-based-authentication-with-expo-and-firebase-part-3-sign-in-forgot-password-and-update-password/"},"frontmatter":{"title":"Email and Password Based Authentication with Expo and Firebase Part 3 - Sign In, Forgot Password, and Update Password"}},"next":null},"pageContext":{"id":"d485587d-6614-58fe-8dd9-f0270231b12f","previousPostId":"bcd9e7ef-a695-598c-8b18-1dd03b2907ae","nextPostId":null}},
    "staticQueryHashes": ["650872877"]}