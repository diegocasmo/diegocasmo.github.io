{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2015-07-28-backbone-required-attributes/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Diego Castillo"}},"markdownRemark":{"id":"b951a101-7b01-5964-b657-4b13ad9c245c","excerpt":"backbone-required-attributes is a view helper to enforce specific view constructor parameters. Its goal is to help designing Backbone.js views which do not…","html":"<p><a href=\"https://github.com/ubiqua/backbone-required-attributes\">backbone-required-attributes</a> is a view helper to enforce specific view constructor parameters. Its goal is to help designing <a href=\"http://backbonejs.org/#View\">Backbone.js views</a> which do not perform complicated logic, but instead require to be initialized with certain paramaters in order to properly work.</p>\n<h2>Usage</h2>\n<p><code class=\"language-text\">backbone-required-attributes</code> allows to define in an object literal notation the necessary information a <code class=\"language-text\">Backbone.View</code> will need in order to properly work. Ideally, the information a <code class=\"language-text\">Backbone.View</code> needs will be passed to it in an object literal notation in its <code class=\"language-text\">initialize</code> method and then validated against its expected type or instance using the <code class=\"language-text\">requiredAttrs</code> object literal. <code class=\"language-text\">backbone-required-attributes</code> internally uses <a href=\"http://underscorejs.org/\">underscore</a> and if a value doesn’t comply to its expected type or instance, a <code class=\"language-text\">console.error</code> will be logged.</p>\n<p>After <code class=\"language-text\">backbone-required-attributes</code> has been loaded, it can be used as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> MyExampleView <span class=\"token operator\">=</span> Backbone<span class=\"token punctuation\">.</span>View<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n  requiredAttrs<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'exampleModel'</span><span class=\"token operator\">:</span> Backbone<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token operator\">:</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'title'</span><span class=\"token operator\">:</span> <span class=\"token string\">'string'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">initialize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">validateAttrs</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Available rules</h2>\n<ul>\n<li><code class=\"language-text\">'string'</code>: Tests if object is a String.</li>\n<li><code class=\"language-text\">'boolean'</code>: Tests if object is either true or false.</li>\n<li><code class=\"language-text\">'array'</code>: Tests if object is an Array.</li>\n<li><code class=\"language-text\">'number'</code>: Tests if object is a Number (including NaN).</li>\n<li>If a function is provided as a rule to <code class=\"language-text\">backbone-required-attributes</code>, it will attempt to test if the value has in its prototype chain the prototype property of the constructor (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\">see more</a>). Therefore, you can also use rules such as:\n<ul>\n<li><code class=\"language-text\">Backbone.Router</code></li>\n<li><code class=\"language-text\">Backbone.Collection</code></li>\n<li><code class=\"language-text\">Backbone.Model</code></li>\n<li><code class=\"language-text\">Backbone.View</code></li>\n</ul>\n</li>\n</ul>\n<h2>Roadmap</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Log errors and warnings with specific view name.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> API to create custom rules.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Avoid running helper on tests since it will make it difficult to test views in an isolated manner.</li>\n</ul>","frontmatter":{"title":"Backbone Required Attributes","date":"July 28, 2015","description":null}},"previous":{"fields":{"slug":"/2015-05-27-simple-bdd-backbone-views/"},"frontmatter":{"title":"Simple BDD Backbone Views"}},"next":{"fields":{"slug":"/2015-12-17-karatsuba-multiplication/"},"frontmatter":{"title":"The Karatsuba Multiplication Algorithm"}}},"pageContext":{"id":"b951a101-7b01-5964-b657-4b13ad9c245c","previousPostId":"c433f679-adad-533f-b9c2-c996305f38aa","nextPostId":"36550629-ab37-5513-abfa-a92cd67dd4b4"}},
    "staticQueryHashes": ["2841359383"]}